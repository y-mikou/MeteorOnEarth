////////////////////////////////////////////////////////////////////////////////////
// 主処理
////////////////////////////////////////////////////////////////////////////////////

【入力ファイル名】は、プログラムの起動時設定(1)。
【傍点文字】は、プログラムの起動時設定(2)。

// チェック ////////////////////////////////////////////////////////
もし入力ファイル名というファイルが存在しないなら
    「💩 そんなファイルないです。[改行]」を出力する。
    終了する。
でなければ
    。
もし終わり。

もし傍点文字が無なら
    「💡 傍点文字の指定がありません。"・"を使用します[改行]」を出力する。
    傍点文字は「・」。
でなければ
    。
もし終わり。

もし傍点文字の文字数が2以上なら
    「🍶 傍点文字は1文字にしてください。[改行]」を出力する。
    終了する。
でなければ
    。
もし終わり。



// 変換処理 ////////////////////////////////////////////////////////

【入力ファイル】は、プログラムの起動時設定(1)から読み込んだもの。
【置換元文字列群】は、入力ファイルから置換元文字列群作成したもの。
【置換先文字列群】は、置換元文字列群から置換先文字列群作成したもの。
【出力ファイル名】は、入力ファイル名のファイル名だけから「」へ拡張子を置き換えたものの末尾から1文字消したもの&「_moe.txt」。

【カウント】は、1。
【出力文字列】は、入力ファイル。
置換元文字列群を要素へそれぞれ繰り返す。
    出力文字列から、置換元文字列群(カウント)を置換先文字列群(カウント)へ置換して出力文字列とする。
    カウントは、カウント＋１。
繰り返し終わり。
出力文字列を、出力ファイル名へ「UTF-8」で保存する。
「✨ 」＆出力ファイル名＆「を出力しました(傍点をルビに)。[改行]」を出力する。
終了する。



////////////////////////////////////////////////////////////////////////////////////
// 関数定義
////////////////////////////////////////////////////////////////////////////////////
【入力文字】から置換元文字列群作成する手順。
    入力文字から「《《.+?》》」という正規表現で取り出して、返却文字一覧とする。
    
    もし返却文字一覧の個数が0なら
        「🍕 傍点指定《《文字》》が含まれていません。[改行]」を出力する。
        終了する。
    でなければ
        。
    もし終わり。

    返却文字一覧を返す。
終わり。



【処理文字列群】から置換先文字列群作成する手順。
    【返却文字列群】は、{}。
    【処理文字】は、「」。
    処理文字列群を要素へそれぞれ繰り返す。
        処理文字は、要素。
        処理文字から「《《」を「」へ置換して処理文字とする。
        処理文字から「》》」を「」へ置換して処理文字とする。
        正規表現で処理文字を「(.)」から「｜$1《」＆傍点文字＆「》」へ置換して処理文字とする。
        返却文字列群に、処理文字を加える。
    繰り返し終わり。
    返却文字列群を返す。
終わり。
